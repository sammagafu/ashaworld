{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"basis-full container mx-auto my-4\"\n};\nconst _hoisted_2 = {\n  class: \"w-1/2 shadow-md py-4\"\n};\nconst _hoisted_3 = {\n  class: \"mx-6\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createStaticVNode(\"<svg width=\\\"139\\\" height=\\\"46\\\" viewBox=\\\"0 0 139 46\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M138.768 35.139C136.233 35.1303 133.694 35.1172 131.159 35.1128C128.964 35.1085 126.764 35.1172 124.569 35.0998C124.364 35.0998 124.164 34.9386 123.964 34.8515C124.151 34.7731 124.329 34.6381 124.521 34.625C126.019 34.5161 126.76 33.2268 126.128 31.7329C125.506 30.2607 124.839 28.8059 124.194 27.3467C122.356 23.2002 120.514 19.0536 118.672 14.9071C118.597 14.7372 118.502 14.576 118.375 14.3321C117.295 16.6755 116.228 18.923 115.226 21.1966C113.715 24.6288 112.234 28.0698 110.797 31.5282C110.574 32.0639 110.466 32.7564 110.592 33.3096C110.792 34.172 111.502 34.5989 112.417 34.6337C112.556 34.6381 112.691 34.7905 112.826 34.8733C112.683 34.956 112.543 35.0475 112.391 35.1128C112.317 35.1433 112.221 35.1172 112.138 35.1172C104.607 35.1172 97.0807 35.1172 89.5498 35.1085C89.2884 35.1085 88.8398 35.2958 88.9226 34.6468C89.1229 34.6381 89.332 34.625 89.5367 34.6206C91.1091 34.5945 92.4158 33.4577 92.4376 31.8897C92.4942 27.9652 92.455 24.0408 92.455 20.0641C87.5026 20.0641 82.5677 20.0641 77.5587 20.0641C77.5457 20.2776 77.5239 20.4997 77.5239 20.7262C77.5195 24.3109 77.5195 27.8956 77.5239 31.4802C77.5239 33.3532 78.6868 34.551 80.5685 34.6163C80.8603 34.625 81.1652 34.5945 80.9997 35.0823C80.8429 35.0954 80.6774 35.1172 80.5118 35.1172C76.2041 35.1172 71.8964 35.1215 67.5843 35.1172C67.3186 35.1172 66.9266 35.2304 67.0616 34.6206C67.2794 34.6206 67.5103 34.6294 67.7368 34.6206C69.3048 34.5466 70.5592 33.2791 70.5636 31.7067C70.5723 23.1915 70.5723 14.6806 70.5636 6.16532C70.5636 4.5276 69.2874 3.27753 67.6409 3.23398C67.3709 3.22527 66.944 3.37771 67.0442 2.77664C71.7004 2.77664 76.3435 2.77664 80.9822 2.77664C81.0214 2.82455 81.0563 2.86811 81.0955 2.91602C80.9518 3.02055 80.8167 3.2122 80.6686 3.22527C78.4516 3.42563 77.5282 4.42307 77.5282 6.64879C77.5282 10.1464 77.5282 13.6483 77.5282 17.1459C77.5282 17.3985 77.5282 17.6511 77.5282 17.9517C82.5154 17.9517 87.4504 17.9517 92.4768 17.9517C92.4768 17.7295 92.4768 17.503 92.4768 17.2809C92.4768 13.718 92.4768 10.1551 92.4768 6.59217C92.4768 4.47533 91.4488 3.39514 89.3189 3.23398C89.1621 3.22091 89.014 3.05104 88.8616 2.95522C88.8921 2.89424 88.9269 2.83762 88.9574 2.77664C93.6005 2.77664 98.2393 2.77664 102.882 2.77664C102.917 2.8289 102.952 2.88553 102.987 2.9378C102.839 3.03797 102.699 3.21656 102.547 3.22962C100.391 3.4082 99.4109 4.4492 99.4109 6.60088C99.4109 14.8374 99.4109 23.0739 99.4109 31.3104C99.4109 33.4533 100.587 34.5771 102.743 34.6337C105.065 34.6947 106.563 33.5971 107.473 31.5325C110.945 23.6619 114.433 15.7913 117.901 7.91628C118.772 5.93447 119.586 3.92217 120.47 1.82275C120.575 1.94471 120.784 2.10587 120.884 2.3193C122.452 5.7254 124.003 9.13586 125.558 12.5463C128.441 18.8838 131.325 25.2256 134.208 31.563C135.101 33.523 136.53 34.686 138.777 34.6337C138.768 34.7949 138.768 34.9647 138.768 35.139Z\\\" fill=\\\"#583098\\\"></path><path d=\\\"M138.769 4.92357C138.712 5.16748 138.66 5.41576 138.595 5.65532C138.111 7.4237 136.321 8.59972 134.54 8.32967C132.627 8.03784 131.316 6.48288 131.351 4.54463C131.386 2.7022 132.858 1.14724 134.723 0.98608C136.552 0.829277 138.233 2.06192 138.634 3.8608C138.673 4.04373 138.725 4.22667 138.769 4.40525C138.769 4.58383 138.769 4.7537 138.769 4.92357Z\\\" fill=\\\"#583098\\\"></path><path d=\\\"M6.51953 2.17106C6.60229 1.97942 6.63278 1.67452 6.78087 1.60483C10.0868 -0.0241749 13.4668 -0.708009 16.9687 0.973265C18.5759 1.74421 19.826 2.9725 20.9323 4.34452C22.8531 6.72705 24.1424 9.45368 25.2792 12.2718C27.6443 18.1388 30.0182 24.0015 32.4225 29.8511C33.7988 33.2049 35.5455 36.3453 38.0412 39.011C39.8662 40.958 41.9569 42.526 44.6531 43.0051C45.6854 43.188 46.7568 43.1576 47.9982 43.236C47.7804 43.4363 47.6367 43.6541 47.4363 43.7412C41.7043 46.2065 35.7937 45.0653 31.3423 40.6966C28.0538 37.4735 25.9456 33.5534 24.3558 29.2936C22.2913 23.7706 20.2354 18.2433 18.0707 12.7552C16.9513 9.91102 15.4442 7.24973 13.3361 4.99351C12.0338 3.59971 10.5528 2.45418 8.59281 2.18413C7.96996 2.09702 7.32532 2.17106 6.51953 2.17106Z\\\" fill=\\\"#583098\\\"></path><path d=\\\"M61.1413 2.56728C61.015 4.0569 60.9018 5.45506 60.7798 6.84886C60.7188 7.5719 60.6579 8.29493 60.5707 9.01361C60.5577 9.13993 60.4139 9.24882 60.3312 9.36642C60.2528 9.26188 60.109 9.1617 60.109 9.05717C60.0611 6.58753 57.9443 4.67976 55.4137 4.22242C53.7455 3.92188 52.099 3.95237 50.5049 4.56651C48.3271 5.40715 47.138 7.51528 47.6519 9.52758C47.9133 10.5512 48.6232 11.2393 49.4334 11.7925C51.5633 13.2473 53.7455 14.6237 55.8754 16.0697C57.831 17.3982 59.8695 18.6352 61.6466 20.1771C63.9115 22.1415 65.2748 24.7244 65.2966 27.7994C65.3271 31.75 63.672 34.9601 60.3791 37.1161C55.6097 40.2348 50.457 40.6442 45.2563 38.3923C39.1323 35.7441 37.1941 28.5486 40.892 22.8384C41.1446 22.4464 41.4277 22.0718 41.6891 21.6972C42.203 21.8017 42.1595 22.0282 41.9548 22.3767C41.0706 23.862 40.4869 25.4605 40.3737 27.194C40.0862 31.6106 42.7954 35.5699 47.0291 36.9245C49.233 37.6301 51.4675 37.6954 53.7063 37.0639C58.8982 35.6047 60.5838 30.0818 57.1124 25.9396C56.0104 24.6242 54.5774 23.7356 53.1836 22.7948C50.8664 21.2355 48.5361 19.698 46.2277 18.1256C44.1195 16.6926 42.5689 14.8458 42.251 12.2194C41.602 6.92727 44.8251 2.94186 49.8036 2.24496C52.2776 1.90087 54.7386 2.21012 57.1995 2.41048C58.2405 2.49759 59.2815 2.51937 60.3225 2.56728C60.562 2.57599 60.8147 2.56728 61.1413 2.56728Z\\\" fill=\\\"#583098\\\"></path><path d=\\\"M13.9859 9.9502C14.4825 11.3266 14.9529 12.5723 15.371 13.8398C15.4364 14.0358 15.2839 14.3276 15.1837 14.5541C12.7315 20.2208 10.2619 25.8787 7.81836 31.5498C7.63978 31.9679 7.49604 32.4557 7.53524 32.8957C7.63542 34.0194 8.30619 34.4942 10.031 34.6771C9.81324 34.8818 9.69999 35.0081 9.56497 35.0996C9.50834 35.1388 9.39945 35.1083 9.31234 35.1083C6.41149 35.1083 3.51064 35.1127 0.609788 35.0953C0.405074 35.0953 0.204715 34.9341 0 34.847C0.182936 34.7686 0.365873 34.6379 0.553165 34.6161C2.40431 34.4201 3.65873 33.4183 4.39048 31.7458C6.82527 26.2098 9.25136 20.6694 11.6774 15.129C12.3177 13.6655 12.958 12.2021 13.5983 10.7386C13.7115 10.5164 13.8204 10.2986 13.9859 9.9502Z\\\" fill=\\\"#583098\\\"></path></svg>\", 1);\n\nconst _hoisted_5 = {\n  class: \"px-6 py-6 lg:px-8\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"mb-4 text-xl font-medium text-gray-900 dark:text-white\"\n}, \"Sign in to our platform\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\",\n  class: \"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n}, \"Your email\", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\",\n  class: \"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n}, \"Your password\", -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"flex justify-between\\\"><div class=\\\"flex items-start\\\"><div class=\\\"flex items-center h-5\\\"><input id=\\\"remember\\\" type=\\\"checkbox\\\" value=\\\"\\\" class=\\\"w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-blue-300 dark:bg-gray-600 dark:border-gray-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800\\\"></div><label for=\\\"remember\\\" class=\\\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\\\">Remember me</label></div><a href=\\\"#\\\" class=\\\"text-sm text-blue-700 hover:underline dark:text-blue-500\\\">Lost Password?</a></div><button type=\\\"submit\\\" class=\\\"w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\\\">Login to your account</button><div class=\\\"text-sm font-medium text-gray-500 dark:text-gray-300\\\"> Not registered? <a href=\\\"#\\\" class=\\\"text-blue-700 hover:underline dark:text-blue-500\\\">Create account</a></div>\", 3);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"form\", {\n    class: \"space-y-6\",\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.loginUser && $options.loginUser(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    class: \"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\",\n    placeholder: \"name@company.com\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", null, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"••••••••\",\n    class: \"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.password]])]), _hoisted_9], 32\n  /* HYDRATE_EVENTS */\n  )])])])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;;;;EAmBJA,KAAK,EAAC;;;gCACTC,oBAA+F,IAA/F,EAA+F;EAA3FD,KAAK,EAAC;AAAqF,CAA/F,EAAmE,yBAAnE,EAA0F;AAAA;AAA1F;;gCAGIC,oBACe,OADf,EACe;EADRC,GAAG,EAAC,OACI;EADIF,KAAK,EAAC;AACV,CADf,EAA2F,YAA3F,EACO;AAAA;AADP;;gCAOAC,oBACkB,OADlB,EACkB;EADXC,GAAG,EAAC,UACO;EADIF,KAAK,EAAC;AACV,CADlB,EAA8F,eAA9F,EACU;AAAA;AADV;;;;;uBAhCZG,oBA8DM,KA9DN,cA8DM,CA7DJF,oBA2DM,KA3DN,cA2DM,CA1DJA,oBAwDM,KAxDN,cAwDM,CAvDJG,UAuDI,EArCJH,oBAmCM,KAnCN,cAmCM,CAlCJI,UAkCI,EAjCJJ,oBAgCO,MAhCP,EAgCO;IAhCDD,KAAK,EAAC,WAgCL;IAhCkBM,QAAM,wDAAUC,iDAAV,EAAmB,WAAnB;EAgCxB,CAhCP,GACEN,oBAMM,KANN,EAMM,IANN,EAMM,CALJO,UAKI,kBAHJP,oBAE0D,OAF1D,EAE0D;IAFnDQ,IAAI,EAAC,OAE8C;IAFtCC,IAAI,EAAC,OAEiC;IAFzBC,EAAE,EAAC,OAEsB;IADxDX,KAAK,EAAC,iNACkD;IAAxDY,WAAW,EAAC,kBAA4C;IAAzBC,QAAQ,EAAR,EAAyB;+DAAPC,cAAKC;EAAE,CAF1D;;EAAA,kBAEmDD,cAC/C,CANN,GAOAb,oBAMM,KANN,EAMM,IANN,EAMM,CALJe,UAKI,kBAHJf,oBAE8B,OAF9B,EAE8B;IAFvBQ,IAAI,EAAC,UAEkB;IAFPC,IAAI,EAAC,UAEE;IAFSC,EAAE,EAAC,UAEZ;IAFuBC,WAAW,EAAC,UAEnC;IAD5BZ,KAAK,EAAC,iNACsB;IAA5Ba,QAAQ,EAAR,EAA4B;+DAAVC,iBAAQC;EAAE,CAF9B;;EAAA,kBAEoBD,iBAChB,CANN,GAOAG,WAfF;;EAAA,CAiCI,CAnCN,CAqCI,CAxDN,CA0DI,CA3DN,CA6DI,CA9DN","names":["class","_createElementVNode","for","_createElementBlock","_hoisted_4","_hoisted_6","onSubmit","$options","_hoisted_7","type","name","id","placeholder","required","$data","$event","_hoisted_8","_hoisted_9"],"sourceRoot":"","sources":["/home/bichwaa/Desktop/lab/ashaworld/ashaadmin/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"basis-full container mx-auto my-4\">\n    <div class=\"w-1/2 shadow-md py-4\">\n      <div class=\"mx-6\">\n        <svg width=\"139\" height=\"46\" viewBox=\"0 0 139 46\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M138.768 35.139C136.233 35.1303 133.694 35.1172 131.159 35.1128C128.964 35.1085 126.764 35.1172 124.569 35.0998C124.364 35.0998 124.164 34.9386 123.964 34.8515C124.151 34.7731 124.329 34.6381 124.521 34.625C126.019 34.5161 126.76 33.2268 126.128 31.7329C125.506 30.2607 124.839 28.8059 124.194 27.3467C122.356 23.2002 120.514 19.0536 118.672 14.9071C118.597 14.7372 118.502 14.576 118.375 14.3321C117.295 16.6755 116.228 18.923 115.226 21.1966C113.715 24.6288 112.234 28.0698 110.797 31.5282C110.574 32.0639 110.466 32.7564 110.592 33.3096C110.792 34.172 111.502 34.5989 112.417 34.6337C112.556 34.6381 112.691 34.7905 112.826 34.8733C112.683 34.956 112.543 35.0475 112.391 35.1128C112.317 35.1433 112.221 35.1172 112.138 35.1172C104.607 35.1172 97.0807 35.1172 89.5498 35.1085C89.2884 35.1085 88.8398 35.2958 88.9226 34.6468C89.1229 34.6381 89.332 34.625 89.5367 34.6206C91.1091 34.5945 92.4158 33.4577 92.4376 31.8897C92.4942 27.9652 92.455 24.0408 92.455 20.0641C87.5026 20.0641 82.5677 20.0641 77.5587 20.0641C77.5457 20.2776 77.5239 20.4997 77.5239 20.7262C77.5195 24.3109 77.5195 27.8956 77.5239 31.4802C77.5239 33.3532 78.6868 34.551 80.5685 34.6163C80.8603 34.625 81.1652 34.5945 80.9997 35.0823C80.8429 35.0954 80.6774 35.1172 80.5118 35.1172C76.2041 35.1172 71.8964 35.1215 67.5843 35.1172C67.3186 35.1172 66.9266 35.2304 67.0616 34.6206C67.2794 34.6206 67.5103 34.6294 67.7368 34.6206C69.3048 34.5466 70.5592 33.2791 70.5636 31.7067C70.5723 23.1915 70.5723 14.6806 70.5636 6.16532C70.5636 4.5276 69.2874 3.27753 67.6409 3.23398C67.3709 3.22527 66.944 3.37771 67.0442 2.77664C71.7004 2.77664 76.3435 2.77664 80.9822 2.77664C81.0214 2.82455 81.0563 2.86811 81.0955 2.91602C80.9518 3.02055 80.8167 3.2122 80.6686 3.22527C78.4516 3.42563 77.5282 4.42307 77.5282 6.64879C77.5282 10.1464 77.5282 13.6483 77.5282 17.1459C77.5282 17.3985 77.5282 17.6511 77.5282 17.9517C82.5154 17.9517 87.4504 17.9517 92.4768 17.9517C92.4768 17.7295 92.4768 17.503 92.4768 17.2809C92.4768 13.718 92.4768 10.1551 92.4768 6.59217C92.4768 4.47533 91.4488 3.39514 89.3189 3.23398C89.1621 3.22091 89.014 3.05104 88.8616 2.95522C88.8921 2.89424 88.9269 2.83762 88.9574 2.77664C93.6005 2.77664 98.2393 2.77664 102.882 2.77664C102.917 2.8289 102.952 2.88553 102.987 2.9378C102.839 3.03797 102.699 3.21656 102.547 3.22962C100.391 3.4082 99.4109 4.4492 99.4109 6.60088C99.4109 14.8374 99.4109 23.0739 99.4109 31.3104C99.4109 33.4533 100.587 34.5771 102.743 34.6337C105.065 34.6947 106.563 33.5971 107.473 31.5325C110.945 23.6619 114.433 15.7913 117.901 7.91628C118.772 5.93447 119.586 3.92217 120.47 1.82275C120.575 1.94471 120.784 2.10587 120.884 2.3193C122.452 5.7254 124.003 9.13586 125.558 12.5463C128.441 18.8838 131.325 25.2256 134.208 31.563C135.101 33.523 136.53 34.686 138.777 34.6337C138.768 34.7949 138.768 34.9647 138.768 35.139Z\"\n            fill=\"#583098\" />\n          <path\n            d=\"M138.769 4.92357C138.712 5.16748 138.66 5.41576 138.595 5.65532C138.111 7.4237 136.321 8.59972 134.54 8.32967C132.627 8.03784 131.316 6.48288 131.351 4.54463C131.386 2.7022 132.858 1.14724 134.723 0.98608C136.552 0.829277 138.233 2.06192 138.634 3.8608C138.673 4.04373 138.725 4.22667 138.769 4.40525C138.769 4.58383 138.769 4.7537 138.769 4.92357Z\"\n            fill=\"#583098\" />\n          <path\n            d=\"M6.51953 2.17106C6.60229 1.97942 6.63278 1.67452 6.78087 1.60483C10.0868 -0.0241749 13.4668 -0.708009 16.9687 0.973265C18.5759 1.74421 19.826 2.9725 20.9323 4.34452C22.8531 6.72705 24.1424 9.45368 25.2792 12.2718C27.6443 18.1388 30.0182 24.0015 32.4225 29.8511C33.7988 33.2049 35.5455 36.3453 38.0412 39.011C39.8662 40.958 41.9569 42.526 44.6531 43.0051C45.6854 43.188 46.7568 43.1576 47.9982 43.236C47.7804 43.4363 47.6367 43.6541 47.4363 43.7412C41.7043 46.2065 35.7937 45.0653 31.3423 40.6966C28.0538 37.4735 25.9456 33.5534 24.3558 29.2936C22.2913 23.7706 20.2354 18.2433 18.0707 12.7552C16.9513 9.91102 15.4442 7.24973 13.3361 4.99351C12.0338 3.59971 10.5528 2.45418 8.59281 2.18413C7.96996 2.09702 7.32532 2.17106 6.51953 2.17106Z\"\n            fill=\"#583098\" />\n          <path\n            d=\"M61.1413 2.56728C61.015 4.0569 60.9018 5.45506 60.7798 6.84886C60.7188 7.5719 60.6579 8.29493 60.5707 9.01361C60.5577 9.13993 60.4139 9.24882 60.3312 9.36642C60.2528 9.26188 60.109 9.1617 60.109 9.05717C60.0611 6.58753 57.9443 4.67976 55.4137 4.22242C53.7455 3.92188 52.099 3.95237 50.5049 4.56651C48.3271 5.40715 47.138 7.51528 47.6519 9.52758C47.9133 10.5512 48.6232 11.2393 49.4334 11.7925C51.5633 13.2473 53.7455 14.6237 55.8754 16.0697C57.831 17.3982 59.8695 18.6352 61.6466 20.1771C63.9115 22.1415 65.2748 24.7244 65.2966 27.7994C65.3271 31.75 63.672 34.9601 60.3791 37.1161C55.6097 40.2348 50.457 40.6442 45.2563 38.3923C39.1323 35.7441 37.1941 28.5486 40.892 22.8384C41.1446 22.4464 41.4277 22.0718 41.6891 21.6972C42.203 21.8017 42.1595 22.0282 41.9548 22.3767C41.0706 23.862 40.4869 25.4605 40.3737 27.194C40.0862 31.6106 42.7954 35.5699 47.0291 36.9245C49.233 37.6301 51.4675 37.6954 53.7063 37.0639C58.8982 35.6047 60.5838 30.0818 57.1124 25.9396C56.0104 24.6242 54.5774 23.7356 53.1836 22.7948C50.8664 21.2355 48.5361 19.698 46.2277 18.1256C44.1195 16.6926 42.5689 14.8458 42.251 12.2194C41.602 6.92727 44.8251 2.94186 49.8036 2.24496C52.2776 1.90087 54.7386 2.21012 57.1995 2.41048C58.2405 2.49759 59.2815 2.51937 60.3225 2.56728C60.562 2.57599 60.8147 2.56728 61.1413 2.56728Z\"\n            fill=\"#583098\" />\n          <path\n            d=\"M13.9859 9.9502C14.4825 11.3266 14.9529 12.5723 15.371 13.8398C15.4364 14.0358 15.2839 14.3276 15.1837 14.5541C12.7315 20.2208 10.2619 25.8787 7.81836 31.5498C7.63978 31.9679 7.49604 32.4557 7.53524 32.8957C7.63542 34.0194 8.30619 34.4942 10.031 34.6771C9.81324 34.8818 9.69999 35.0081 9.56497 35.0996C9.50834 35.1388 9.39945 35.1083 9.31234 35.1083C6.41149 35.1083 3.51064 35.1127 0.609788 35.0953C0.405074 35.0953 0.204715 34.9341 0 34.847C0.182936 34.7686 0.365873 34.6379 0.553165 34.6161C2.40431 34.4201 3.65873 33.4183 4.39048 31.7458C6.82527 26.2098 9.25136 20.6694 11.6774 15.129C12.3177 13.6655 12.958 12.2021 13.5983 10.7386C13.7115 10.5164 13.8204 10.2986 13.9859 9.9502Z\"\n            fill=\"#583098\" />\n        </svg>\n\n        <div class=\"px-6 py-6 lg:px-8\">\n          <h3 class=\"mb-4 text-xl font-medium text-gray-900 dark:text-white\">Sign in to our platform</h3>\n          <form class=\"space-y-6\" @submit.prevent=\"loginUser\">\n            <div>\n              <label for=\"email\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Your\n                email</label>\n              <input type=\"email\" name=\"email\" id=\"email\"\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                placeholder=\"name@company.com\" required v-model=\"email\">\n            </div>\n            <div>\n              <label for=\"password\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Your\n                password</label>\n              <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"••••••••\"\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                required v-model=\"password\">\n            </div>\n            <div class=\"flex justify-between\">\n              <div class=\"flex items-start\">\n                <div class=\"flex items-center h-5\">\n                  <input id=\"remember\" type=\"checkbox\" value=\"\"\n                    class=\"w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-blue-300 dark:bg-gray-600 dark:border-gray-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800\">\n                </div>\n                <label for=\"remember\" class=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Remember\n                  me</label>\n              </div>\n              <a href=\"#\" class=\"text-sm text-blue-700 hover:underline dark:text-blue-500\">Lost Password?</a>\n            </div>\n            <button type=\"submit\"\n              class=\"w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Login\n              to your account</button>\n            <div class=\"text-sm font-medium text-gray-500 dark:text-gray-300\">\n              Not registered? <a href=\"#\" class=\"text-blue-700 hover:underline dark:text-blue-500\">Create account</a>\n            </div>\n          </form>\n        </div>\n\n      </div>\n\n    </div>\n\n  </div>\n</template>\n\n<script>\n  import axios from 'axios';\n  export default {\n    name: 'Login',\n    data() {\n      return {\n        email: '',\n        password: '',\n        errors: [],\n      }\n    },\n    mounted() {\n      document.title = 'Log In | Asha'\n    },\n    methods: {\n      async loginUser() {\n        axios.defaults.headers.common[\"Authorization\"] = \"\"\n        localStorage.removeItem(\"token\")\n        const loginData = {\n          email: this.email,\n          password: this.password\n        }\n        await axios.post('token/login/', loginData)\n          .then(response => {\n            const token = response.data.auth_token\n            this.$store.commit('setToken', token)\n            axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token\n            localStorage.setItem(\"token\", token)\n            const toPath = this.$route.query.to || '/cart'\n            this.$router.push(toPath)\n            // console.log('response :>> ', response.data.auth_token);\n          }).catch(error => {\n            if (error.response) {\n              for (const property in error.response.data) {\n                this.errors.push(`${property}: ${error.response.data[property]}`)\n              }\n            } else {\n              this.errors.push('Something went wrong. Please try again')\n              console.log(JSON.stringify(error))\n            }\n          })\n        axios\n          .get('/users/me', {\n            headers: {\n              'Authorization': `token ${access_token}`\n            }\n          })\n          .then(response => {\n            this.$store.commit('setUser', {\n              'id': response.data.id,\n              'email': response.data.email\n            })\n            localStorage.setItem('email', response.data.email)\n            localStorage.setItem('userid', response.data.id)\n          })\n          .catch(error => {\n            console.log(error)\n          })\n      }\n    }\n  }\n</script>"]},"metadata":{},"sourceType":"module"}